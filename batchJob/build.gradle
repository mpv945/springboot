buildscript {
    ext {
        springBootVersion = versions.'springBoot'
    }
    repositories {
        mavenCentral()
    }
    //指定boot版本，用来提供相关的Maven默认的依赖，使用它之后，常用的包依赖可以省去version标签
    //这个就类似maven的配<parent><groupId><org.springframework.boot</groupId><artifactid>spring-boot-starter-parent</artifactid><version>versions.'springBoot'</
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// 类似maven的插件 spring-boot-maven-plugin，提供spring boot打包为可执行的jar或者war文件
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

dependencies {
    // 如果不需要web，可以使用该依赖
    //compile('org.springframework.boot:spring-boot-starter')
    // 如果需要web使用下面的，会包含上面的依赖
    compile('org.springframework.boot:spring-boot-starter-web')
    // spring-batch的依赖
    //compile('org.springframework.boot:spring-boot-starter-batch')
    // 连接redis的依赖
    //compile('org.springframework.boot:spring-boot-starter-data-redis')
    // quartz的依赖jar
    //compile('org.springframework.boot:spring-boot-starter-quartz')
    // thymeleaf 模板引擎
    //compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    // mybatis的依赖
    //compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
    // 只在编译的时候依赖lombok（自动set和get等相关处理）
    compileOnly('org.projectlombok:lombok')
    // spring-boot 测试
    testCompile('org.springframework.boot:spring-boot-starter-test')
    // spring-batch测试
    //testCompile('org.springframework.batch:spring-batch-test')
    //testCompile group: 'junit', name: 'junit', version: '4.12'
}
